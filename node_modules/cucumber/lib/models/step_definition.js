'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _data_table = require('./data_table');

var _data_table2 = _interopRequireDefault(_data_table);

var _step_arguments = require('../step_arguments');

var _definition = require('./definition');

var _definition2 = _interopRequireDefault(_definition);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StepDefinition = function (_Definition) {
  (0, _inherits3.default)(StepDefinition, _Definition);

  function StepDefinition(_ref) {
    var code = _ref.code,
        line = _ref.line,
        options = _ref.options,
        uri = _ref.uri,
        pattern = _ref.pattern,
        expression = _ref.expression;
    (0, _classCallCheck3.default)(this, StepDefinition);

    var _this = (0, _possibleConstructorReturn3.default)(this, (StepDefinition.__proto__ || Object.getPrototypeOf(StepDefinition)).call(this, { code: code, line: line, options: options, uri: uri }));

    _this.pattern = pattern;
    _this.expression = expression;
    return _this;
  }

  (0, _createClass3.default)(StepDefinition, [{
    key: 'getInvocationParameters',
    value: function getInvocationParameters(_ref2) {
      var step = _ref2.step,
          world = _ref2.world;

      var stepNameParameters = this.expression.match(step.text).map(function (arg) {
        return arg.getValue(world);
      });
      var iterator = (0, _step_arguments.buildStepArgumentIterator)({
        dataTable: function dataTable(arg) {
          return new _data_table2.default(arg);
        },
        docString: function docString(arg) {
          return arg.content;
        }
      });
      var stepArgumentParameters = step.arguments.map(iterator);
      return stepNameParameters.concat(stepArgumentParameters);
    }
  }, {
    key: 'getValidCodeLengths',
    value: function getValidCodeLengths(parameters) {
      return [parameters.length, parameters.length + 1];
    }
  }, {
    key: 'matchesStepName',
    value: function matchesStepName(stepName) {
      return Boolean(this.expression.match(stepName));
    }
  }]);
  return StepDefinition;
}(_definition2.default);

exports.default = StepDefinition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvc3RlcF9kZWZpbml0aW9uLmpzIl0sIm5hbWVzIjpbIlN0ZXBEZWZpbml0aW9uIiwiY29kZSIsImxpbmUiLCJvcHRpb25zIiwidXJpIiwicGF0dGVybiIsImV4cHJlc3Npb24iLCJzdGVwIiwid29ybGQiLCJzdGVwTmFtZVBhcmFtZXRlcnMiLCJtYXRjaCIsInRleHQiLCJtYXAiLCJhcmciLCJnZXRWYWx1ZSIsIml0ZXJhdG9yIiwiZGF0YVRhYmxlIiwiZG9jU3RyaW5nIiwiY29udGVudCIsInN0ZXBBcmd1bWVudFBhcmFtZXRlcnMiLCJhcmd1bWVudHMiLCJjb25jYXQiLCJwYXJhbWV0ZXJzIiwibGVuZ3RoIiwic3RlcE5hbWUiLCJCb29sZWFuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7Ozs7O0lBRXFCQSxjOzs7QUFDbkIsZ0NBQStEO0FBQUEsUUFBakRDLElBQWlELFFBQWpEQSxJQUFpRDtBQUFBLFFBQTNDQyxJQUEyQyxRQUEzQ0EsSUFBMkM7QUFBQSxRQUFyQ0MsT0FBcUMsUUFBckNBLE9BQXFDO0FBQUEsUUFBNUJDLEdBQTRCLFFBQTVCQSxHQUE0QjtBQUFBLFFBQXZCQyxPQUF1QixRQUF2QkEsT0FBdUI7QUFBQSxRQUFkQyxVQUFjLFFBQWRBLFVBQWM7QUFBQTs7QUFBQSw4SUFDdkQsRUFBRUwsVUFBRixFQUFRQyxVQUFSLEVBQWNDLGdCQUFkLEVBQXVCQyxRQUF2QixFQUR1RDs7QUFFN0QsVUFBS0MsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsVUFBS0MsVUFBTCxHQUFrQkEsVUFBbEI7QUFINkQ7QUFJOUQ7Ozs7bURBRXdDO0FBQUEsVUFBZkMsSUFBZSxTQUFmQSxJQUFlO0FBQUEsVUFBVEMsS0FBUyxTQUFUQSxLQUFTOztBQUN2QyxVQUFNQyxxQkFBcUIsS0FBS0gsVUFBTCxDQUN4QkksS0FEd0IsQ0FDbEJILEtBQUtJLElBRGEsRUFFeEJDLEdBRndCLENBRXBCO0FBQUEsZUFBT0MsSUFBSUMsUUFBSixDQUFhTixLQUFiLENBQVA7QUFBQSxPQUZvQixDQUEzQjtBQUdBLFVBQU1PLFdBQVcsK0NBQTBCO0FBQ3pDQyxtQkFBVztBQUFBLGlCQUFPLHlCQUFjSCxHQUFkLENBQVA7QUFBQSxTQUQ4QjtBQUV6Q0ksbUJBQVc7QUFBQSxpQkFBT0osSUFBSUssT0FBWDtBQUFBO0FBRjhCLE9BQTFCLENBQWpCO0FBSUEsVUFBTUMseUJBQXlCWixLQUFLYSxTQUFMLENBQWVSLEdBQWYsQ0FBbUJHLFFBQW5CLENBQS9CO0FBQ0EsYUFBT04sbUJBQW1CWSxNQUFuQixDQUEwQkYsc0JBQTFCLENBQVA7QUFDRDs7O3dDQUVtQkcsVSxFQUFZO0FBQzlCLGFBQU8sQ0FBQ0EsV0FBV0MsTUFBWixFQUFvQkQsV0FBV0MsTUFBWCxHQUFvQixDQUF4QyxDQUFQO0FBQ0Q7OztvQ0FFZUMsUSxFQUFVO0FBQ3hCLGFBQU9DLFFBQVEsS0FBS25CLFVBQUwsQ0FBZ0JJLEtBQWhCLENBQXNCYyxRQUF0QixDQUFSLENBQVA7QUFDRDs7Ozs7a0JBekJrQnhCLGMiLCJmaWxlIjoic3RlcF9kZWZpbml0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERhdGFUYWJsZSBmcm9tICcuL2RhdGFfdGFibGUnXG5pbXBvcnQgeyBidWlsZFN0ZXBBcmd1bWVudEl0ZXJhdG9yIH0gZnJvbSAnLi4vc3RlcF9hcmd1bWVudHMnXG5pbXBvcnQgRGVmaW5pdGlvbiBmcm9tICcuL2RlZmluaXRpb24nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0ZXBEZWZpbml0aW9uIGV4dGVuZHMgRGVmaW5pdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgY29kZSwgbGluZSwgb3B0aW9ucywgdXJpLCBwYXR0ZXJuLCBleHByZXNzaW9uIH0pIHtcbiAgICBzdXBlcih7IGNvZGUsIGxpbmUsIG9wdGlvbnMsIHVyaSB9KVxuICAgIHRoaXMucGF0dGVybiA9IHBhdHRlcm5cbiAgICB0aGlzLmV4cHJlc3Npb24gPSBleHByZXNzaW9uXG4gIH1cblxuICBnZXRJbnZvY2F0aW9uUGFyYW1ldGVycyh7IHN0ZXAsIHdvcmxkIH0pIHtcbiAgICBjb25zdCBzdGVwTmFtZVBhcmFtZXRlcnMgPSB0aGlzLmV4cHJlc3Npb25cbiAgICAgIC5tYXRjaChzdGVwLnRleHQpXG4gICAgICAubWFwKGFyZyA9PiBhcmcuZ2V0VmFsdWUod29ybGQpKVxuICAgIGNvbnN0IGl0ZXJhdG9yID0gYnVpbGRTdGVwQXJndW1lbnRJdGVyYXRvcih7XG4gICAgICBkYXRhVGFibGU6IGFyZyA9PiBuZXcgRGF0YVRhYmxlKGFyZyksXG4gICAgICBkb2NTdHJpbmc6IGFyZyA9PiBhcmcuY29udGVudCxcbiAgICB9KVxuICAgIGNvbnN0IHN0ZXBBcmd1bWVudFBhcmFtZXRlcnMgPSBzdGVwLmFyZ3VtZW50cy5tYXAoaXRlcmF0b3IpXG4gICAgcmV0dXJuIHN0ZXBOYW1lUGFyYW1ldGVycy5jb25jYXQoc3RlcEFyZ3VtZW50UGFyYW1ldGVycylcbiAgfVxuXG4gIGdldFZhbGlkQ29kZUxlbmd0aHMocGFyYW1ldGVycykge1xuICAgIHJldHVybiBbcGFyYW1ldGVycy5sZW5ndGgsIHBhcmFtZXRlcnMubGVuZ3RoICsgMV1cbiAgfVxuXG4gIG1hdGNoZXNTdGVwTmFtZShzdGVwTmFtZSkge1xuICAgIHJldHVybiBCb29sZWFuKHRoaXMuZXhwcmVzc2lvbi5tYXRjaChzdGVwTmFtZSkpXG4gIH1cbn1cbiJdfQ==