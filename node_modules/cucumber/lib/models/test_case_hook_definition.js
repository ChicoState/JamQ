'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _pickle_filter = require('../pickle_filter');

var _pickle_filter2 = _interopRequireDefault(_pickle_filter);

var _definition = require('./definition');

var _definition2 = _interopRequireDefault(_definition);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TestCaseHookDefinition = function (_Definition) {
  (0, _inherits3.default)(TestCaseHookDefinition, _Definition);

  function TestCaseHookDefinition() {
    var _ref;

    (0, _classCallCheck3.default)(this, TestCaseHookDefinition);

    for (var _len = arguments.length, data = Array(_len), _key = 0; _key < _len; _key++) {
      data[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = TestCaseHookDefinition.__proto__ || Object.getPrototypeOf(TestCaseHookDefinition)).call.apply(_ref, [this].concat(data)));

    _this.pickleFilter = new _pickle_filter2.default({
      tagExpression: _this.options.tags
    });
    return _this;
  }

  (0, _createClass3.default)(TestCaseHookDefinition, [{
    key: 'appliesToTestCase',
    value: function appliesToTestCase(_ref2) {
      var pickle = _ref2.pickle,
          uri = _ref2.uri;

      return this.pickleFilter.matches({ pickle: pickle, uri: uri });
    }
  }, {
    key: 'getInvalidCodeLengthMessage',
    value: function getInvalidCodeLengthMessage() {
      return this.buildInvalidCodeLengthMessage('0 or 1', '2');
    }
  }, {
    key: 'getInvocationParameters',
    value: function getInvocationParameters(_ref3) {
      var hookParameter = _ref3.hookParameter;

      return [hookParameter];
    }
  }, {
    key: 'getValidCodeLengths',
    value: function getValidCodeLengths() {
      return [0, 1, 2];
    }
  }]);
  return TestCaseHookDefinition;
}(_definition2.default);

exports.default = TestCaseHookDefinition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvdGVzdF9jYXNlX2hvb2tfZGVmaW5pdGlvbi5qcyJdLCJuYW1lcyI6WyJUZXN0Q2FzZUhvb2tEZWZpbml0aW9uIiwiZGF0YSIsInBpY2tsZUZpbHRlciIsInRhZ0V4cHJlc3Npb24iLCJvcHRpb25zIiwidGFncyIsInBpY2tsZSIsInVyaSIsIm1hdGNoZXMiLCJidWlsZEludmFsaWRDb2RlTGVuZ3RoTWVzc2FnZSIsImhvb2tQYXJhbWV0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7SUFFcUJBLHNCOzs7QUFDbkIsb0NBQXFCO0FBQUE7O0FBQUE7O0FBQUEsc0NBQU5DLElBQU07QUFBTkEsVUFBTTtBQUFBOztBQUFBLHlMQUNWQSxJQURVOztBQUVuQixVQUFLQyxZQUFMLEdBQW9CLDRCQUFpQjtBQUNuQ0MscUJBQWUsTUFBS0MsT0FBTCxDQUFhQztBQURPLEtBQWpCLENBQXBCO0FBRm1CO0FBS3BCOzs7OzZDQUVrQztBQUFBLFVBQWZDLE1BQWUsU0FBZkEsTUFBZTtBQUFBLFVBQVBDLEdBQU8sU0FBUEEsR0FBTzs7QUFDakMsYUFBTyxLQUFLTCxZQUFMLENBQWtCTSxPQUFsQixDQUEwQixFQUFFRixjQUFGLEVBQVVDLFFBQVYsRUFBMUIsQ0FBUDtBQUNEOzs7a0RBRTZCO0FBQzVCLGFBQU8sS0FBS0UsNkJBQUwsQ0FBbUMsUUFBbkMsRUFBNkMsR0FBN0MsQ0FBUDtBQUNEOzs7bURBRTBDO0FBQUEsVUFBakJDLGFBQWlCLFNBQWpCQSxhQUFpQjs7QUFDekMsYUFBTyxDQUFDQSxhQUFELENBQVA7QUFDRDs7OzBDQUVxQjtBQUNwQixhQUFPLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBQVA7QUFDRDs7Ozs7a0JBdEJrQlYsc0IiLCJmaWxlIjoidGVzdF9jYXNlX2hvb2tfZGVmaW5pdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQaWNrbGVGaWx0ZXIgZnJvbSAnLi4vcGlja2xlX2ZpbHRlcidcbmltcG9ydCBEZWZpbml0aW9uIGZyb20gJy4vZGVmaW5pdGlvbidcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVzdENhc2VIb29rRGVmaW5pdGlvbiBleHRlbmRzIERlZmluaXRpb24ge1xuICBjb25zdHJ1Y3RvciguLi5kYXRhKSB7XG4gICAgc3VwZXIoLi4uZGF0YSlcbiAgICB0aGlzLnBpY2tsZUZpbHRlciA9IG5ldyBQaWNrbGVGaWx0ZXIoe1xuICAgICAgdGFnRXhwcmVzc2lvbjogdGhpcy5vcHRpb25zLnRhZ3MsXG4gICAgfSlcbiAgfVxuXG4gIGFwcGxpZXNUb1Rlc3RDYXNlKHsgcGlja2xlLCB1cmkgfSkge1xuICAgIHJldHVybiB0aGlzLnBpY2tsZUZpbHRlci5tYXRjaGVzKHsgcGlja2xlLCB1cmkgfSlcbiAgfVxuXG4gIGdldEludmFsaWRDb2RlTGVuZ3RoTWVzc2FnZSgpIHtcbiAgICByZXR1cm4gdGhpcy5idWlsZEludmFsaWRDb2RlTGVuZ3RoTWVzc2FnZSgnMCBvciAxJywgJzInKVxuICB9XG5cbiAgZ2V0SW52b2NhdGlvblBhcmFtZXRlcnMoeyBob29rUGFyYW1ldGVyIH0pIHtcbiAgICByZXR1cm4gW2hvb2tQYXJhbWV0ZXJdXG4gIH1cblxuICBnZXRWYWxpZENvZGVMZW5ndGhzKCkge1xuICAgIHJldHVybiBbMCwgMSwgMl1cbiAgfVxufVxuIl19