"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Definition = function () {
  function Definition(_ref) {
    var code = _ref.code,
        line = _ref.line,
        options = _ref.options,
        uri = _ref.uri;
    (0, _classCallCheck3.default)(this, Definition);

    this.code = code;
    this.line = line;
    this.options = options;
    this.uri = uri;
  }

  (0, _createClass3.default)(Definition, [{
    key: "buildInvalidCodeLengthMessage",
    value: function buildInvalidCodeLengthMessage(syncOrPromiseLength, callbackLength) {
      return "function has " + this.code.length + " arguments" + (", should have " + syncOrPromiseLength + " (if synchronous or returning a promise)") + (" or " + callbackLength + " (if accepting a callback)");
    }
  }, {
    key: "getInvalidCodeLengthMessage",
    value: function getInvalidCodeLengthMessage(parameters) {
      return this.buildInvalidCodeLengthMessage(parameters.length, parameters.length + 1);
    }
  }]);
  return Definition;
}();

exports.default = Definition;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvZGVmaW5pdGlvbi5qcyJdLCJuYW1lcyI6WyJEZWZpbml0aW9uIiwiY29kZSIsImxpbmUiLCJvcHRpb25zIiwidXJpIiwic3luY09yUHJvbWlzZUxlbmd0aCIsImNhbGxiYWNrTGVuZ3RoIiwibGVuZ3RoIiwicGFyYW1ldGVycyIsImJ1aWxkSW52YWxpZENvZGVMZW5ndGhNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0lBQXFCQSxVO0FBQ25CLDRCQUEwQztBQUFBLFFBQTVCQyxJQUE0QixRQUE1QkEsSUFBNEI7QUFBQSxRQUF0QkMsSUFBc0IsUUFBdEJBLElBQXNCO0FBQUEsUUFBaEJDLE9BQWdCLFFBQWhCQSxPQUFnQjtBQUFBLFFBQVBDLEdBQU8sUUFBUEEsR0FBTztBQUFBOztBQUN4QyxTQUFLSCxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLQyxHQUFMLEdBQVdBLEdBQVg7QUFDRDs7OztrREFFNkJDLG1CLEVBQXFCQyxjLEVBQWdCO0FBQ2pFLGFBQ0Usa0JBQWdCLEtBQUtMLElBQUwsQ0FBVU0sTUFBMUIsc0NBQ2lCRixtQkFEakIsMkRBRU9DLGNBRlAsZ0NBREY7QUFLRDs7O2dEQUUyQkUsVSxFQUFZO0FBQ3RDLGFBQU8sS0FBS0MsNkJBQUwsQ0FDTEQsV0FBV0QsTUFETixFQUVMQyxXQUFXRCxNQUFYLEdBQW9CLENBRmYsQ0FBUDtBQUlEOzs7OztrQkFyQmtCUCxVIiwiZmlsZSI6ImRlZmluaXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBEZWZpbml0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBjb2RlLCBsaW5lLCBvcHRpb25zLCB1cmkgfSkge1xuICAgIHRoaXMuY29kZSA9IGNvZGVcbiAgICB0aGlzLmxpbmUgPSBsaW5lXG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9uc1xuICAgIHRoaXMudXJpID0gdXJpXG4gIH1cblxuICBidWlsZEludmFsaWRDb2RlTGVuZ3RoTWVzc2FnZShzeW5jT3JQcm9taXNlTGVuZ3RoLCBjYWxsYmFja0xlbmd0aCkge1xuICAgIHJldHVybiAoXG4gICAgICBgZnVuY3Rpb24gaGFzICR7dGhpcy5jb2RlLmxlbmd0aH0gYXJndW1lbnRzYCArXG4gICAgICBgLCBzaG91bGQgaGF2ZSAke3N5bmNPclByb21pc2VMZW5ndGh9IChpZiBzeW5jaHJvbm91cyBvciByZXR1cm5pbmcgYSBwcm9taXNlKWAgK1xuICAgICAgYCBvciAke2NhbGxiYWNrTGVuZ3RofSAoaWYgYWNjZXB0aW5nIGEgY2FsbGJhY2spYFxuICAgIClcbiAgfVxuXG4gIGdldEludmFsaWRDb2RlTGVuZ3RoTWVzc2FnZShwYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMuYnVpbGRJbnZhbGlkQ29kZUxlbmd0aE1lc3NhZ2UoXG4gICAgICBwYXJhbWV0ZXJzLmxlbmd0aCxcbiAgICAgIHBhcmFtZXRlcnMubGVuZ3RoICsgMVxuICAgIClcbiAgfVxufVxuIl19