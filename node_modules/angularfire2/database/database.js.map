{"version":3,"sources":["../../../src/database/database.ts"],"names":[],"mappings":"AACA,OAAO,mBAAA,CAAoB;AAC3B,OAAO,EAAU,UAAA,EAAW,MAAO,eAAA,CAAgB;AACnD,OAAO,EAA6C,WAAA,EAAY,MAAO,cAAA,CAAe;AACtF,OAAO,EAAE,mBAAA,EAAoB,MAAO,yBAAA,CAA0B;AAG9D,OAAO,EAAE,qBAAA,EAAsB,MAAO,2BAAA,CAA4B;AAElE,OAAO,KAAK,KAAA,MAAW,SAAA,CAAU;AAGjC;IAOE,6BAAmB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAED,kCAAI,GAAJ,UAAK,SAAwB,EAAE,IAA6B;QAC1D,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC9C,MAAM,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,oCAAM,GAAN,UAAO,SAAwB,EAAE,IAA+B;QAC9D,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAC9C,MAAM,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAEI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,0BAAC;CA5BD,AA4BC,IAAA;SA5BY,mBAAmB","file":"database.js","sourceRoot":"","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport { Inject, Injectable } from '@angular/core';\nimport { FirebaseAppConfigToken, FirebaseAppConfig, FirebaseApp } from 'angularfire2';\nimport { FirebaseListFactory } from './firebase_list_factory';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { FirebaseListFactoryOpts, FirebaseObjectFactoryOpts, PathReference } from './interfaces';\nimport { FirebaseObjectFactory } from './firebase_object_factory';\nimport { FirebaseObjectObservable } from './firebase_object_observable';\nimport * as utils from './utils';\n\n\nexport class AngularFireDatabase {\n\n  /**\n   * Firebase Database instance\n   */\n  database: firebase.database.Database;\n  \n  constructor(public app: FirebaseApp) {\n    this.database = app.database();\n  }\n\n  list(pathOrRef: PathReference, opts?:FirebaseListFactoryOpts):FirebaseListObservable<any[]> {\n    const ref = utils.getRef(this.app, pathOrRef);\n    return FirebaseListFactory(ref, opts);\n  }\n\n  object(pathOrRef: PathReference, opts?:FirebaseObjectFactoryOpts):FirebaseObjectObservable<any> {\n    const ref = utils.getRef(this.app, pathOrRef);\n    return FirebaseObjectFactory(ref, opts);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FirebaseApp, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}